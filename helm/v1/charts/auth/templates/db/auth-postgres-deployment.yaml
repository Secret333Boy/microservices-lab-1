apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Chart.Name }}-postgres-pod
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Chart.Name }}-postgres-pod
    spec:
      containers:
        - name: {{ .Release.Name }}-{{ .Chart.Name }}-postgres-container
          image: postgres:14.1-alpine3.15
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
          resources:
            limits:
              memory: "512Mi"
              cpu: "250m"
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-secret
                  key: POSTGRES_PASSWORD
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Chart.Name }}-postgres-volume-claim